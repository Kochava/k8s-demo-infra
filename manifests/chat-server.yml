apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-server
  labels:
    app: chat-server
spec:
  selector:
    matchLabels:
      app: chat-server
      tier: api
  template:
    metadata:
      labels:
        app: chat-server
        tier: api
    spec:
      containers:
      - name: k8sdemo-chat-server
        image: gcr.io/kochava-testing/k8sdemo-chat-server:latest
        command:
          - "/usr/local/bin/chat-server"
          - "-server-addr"
          - "0.0.0.0:8080"
          - "-server-mode"
          - "ws"
          - "-health-addr"
          - "0.0.0.0:8081"
          - "-health-path"
          - "/healthz"
          - "-json-validation-schema-path"
          - "file:///etc/chat/message-schema.json"
        ports:
        - containerPort: 8080
        livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 600
            timeoutSeconds: 1
---
apiVersion: cloud.google.com/v1beta1
kind: BackendConfig
metadata:
  name: chat-server-backend
spec:
  timeoutSec: 86400
  connectionDraining:
    drainingTimeoutSec: 60
  sessionAffinity:
    affinityType: "CLIENT_IP"
---
apiVersion: v1
kind: Service
metadata:
  name: chat-server-nodeport
  labels:
    app: chat
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    beta.cloud.google.com/backend-config: '{"default": "chat-server-backend"}'
spec:
  type: NodePort
  selector:
    app: chat-server
  ports:
  - name: websocket
    port: 8080
    targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.allow-http: "true"
    kubernetes.io/ingress.global-static-ip-name: "k8s-demo-chat-server"
  name: k8s-demo-server-lb
  labels:
    app: chat-server
spec:
  backend:
    serviceName: chat-server-nodeport
    servicePort: 8080
